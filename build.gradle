apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply plugin: 'war'
apply plugin: 'tomcat'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.4'
    }
}

repositories {	
	mavenCentral()
	maven { url "http://repo.spring.io/libs-release" }
    maven { url "http://repo.spring.io/milestone" }
    maven { url "http://repo.spring.io/snapshot" }
}

ext {
	cargoVersion = '1.4.8'
    jacksonVersion = '2.4.2'
    junitVersion = '4.11'
    hamcrestVersion = '1.3'
    log4jVersion = '1.2.17'
    reactorVersion = '1.0.1.RELEASE'
    slf4jVersion = '1.7.7'
    servletApiVersion = '3.1.0'
    springVersion = '4.1.1.BUILD-SNAPSHOT'
    springDataRedisVersion = '1.4.0.BUILD-SNAPSHOT'
    springSecurityVersion = '4.0.0.CI-SNAPSHOT'
    springSession = '1.0.0.M1'
    tomcatVersion = '7.0.55' 
}

dependencies {
	compile "org.springframework:spring-messaging:$springVersion"
    compile "org.springframework:spring-web:$springVersion"
    compile "org.springframework:spring-webmvc:$springVersion"
    compile "org.springframework:spring-websocket:$springVersion"
    compile "org.projectreactor:reactor-tcp:$reactorVersion"
    
    compile "org.springframework.security:spring-security-core:$springSecurityVersion"
    compile "org.springframework.security:spring-security-messaging:$springSecurityVersion"
    compile "org.springframework.security:spring-security-config:$springSecurityVersion"
    compile("org.springframework.security:spring-security-web:$springSecurityVersion") {
    	exclude group: 'org.springframework', module: 'spring-jdbc'
    }
    
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    
    compile "org.slf4j:slf4j-api:$slf4jVersion"
	compile "org.slf4j:jcl-over-slf4j:$slf4jVersion"
	compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
	compile "log4j:log4j:$log4jVersion"
    
    providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"
    
    testCompile("junit:junit:$junitVersion") {
		exclude group: 'org.hamcrest', module: 'hamcrest-core'
	}
	
	testCompile "org.hamcrest:hamcrest-all:$hamcrestVersion"
	testCompile "org.springframework:spring-test:$springVersion"	
	
	tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-websocket:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

eclipse.classpath.file {
    // Classpath entry for Eclipse which changes the order of classpathentries; otherwise no sources for 3rd party jars are shown
    withXml { xml ->
        def node = xml.asNode()
        node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
        node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
    }
}
